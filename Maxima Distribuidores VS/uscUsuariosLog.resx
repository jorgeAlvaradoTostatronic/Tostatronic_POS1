<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAccion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>