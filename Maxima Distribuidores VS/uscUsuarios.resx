<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>