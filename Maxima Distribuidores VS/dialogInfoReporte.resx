<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        p/xWtYT8G95ujwTn3AfiAAAAAElFTkSuQmCC
</value>
  </data>
</root>