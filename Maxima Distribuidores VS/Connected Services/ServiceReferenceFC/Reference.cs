//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maxima_Distribuidores_VS.ServiceReferenceFC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaCFDi", Namespace="http://schemas.datacontract.org/2004/07/FacturaService")]
    [System.SerializableAttribute()]
    public partial class RespuestaCFDi : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Documento {
            get {
                return this.DocumentoField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentoField, value) != true)) {
                    this.DocumentoField = value;
                    this.RaisePropertyChanged("Documento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mensaje {
            get {
                return this.MensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeField, value) != true)) {
                    this.MensajeField = value;
                    this.RaisePropertyChanged("Mensaje");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceFC.ITimbrado")]
    public interface ITimbrado {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/Timbrar", ReplyAction="http://tempuri.org/ITimbrado/TimbrarResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi Timbrar(string Usuario, string Password, byte[] ArchivoXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/Timbrar", ReplyAction="http://tempuri.org/ITimbrado/TimbrarResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> TimbrarAsync(string Usuario, string Password, byte[] ArchivoXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/TimbrarTest", ReplyAction="http://tempuri.org/ITimbrado/TimbrarTestResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi TimbrarTest(string Usuario, string Password, byte[] ArchivoXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/TimbrarTest", ReplyAction="http://tempuri.org/ITimbrado/TimbrarTestResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> TimbrarTestAsync(string Usuario, string Password, byte[] ArchivoXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/PDF", ReplyAction="http://tempuri.org/ITimbrado/PDFResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi PDF(string Usuario, string Password, byte[] ArchivoXML, byte[] ArchivoACK);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/PDF", ReplyAction="http://tempuri.org/ITimbrado/PDFResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> PDFAsync(string Usuario, string Password, byte[] ArchivoXML, byte[] ArchivoACK);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/Cancelar", ReplyAction="http://tempuri.org/ITimbrado/CancelarResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi Cancelar(string Usuario, string Password, byte[] PFX, string[] UUID, string ContraseñaPFX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/Cancelar", ReplyAction="http://tempuri.org/ITimbrado/CancelarResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> CancelarAsync(string Usuario, string Password, byte[] PFX, string[] UUID, string ContraseñaPFX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/CambiarContrasena", ReplyAction="http://tempuri.org/ITimbrado/CambiarContrasenaResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi CambiarContrasena(string Usuario, string Password, string NuevoPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/CambiarContrasena", ReplyAction="http://tempuri.org/ITimbrado/CambiarContrasenaResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> CambiarContrasenaAsync(string Usuario, string Password, string NuevoPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/Login", ReplyAction="http://tempuri.org/ITimbrado/LoginResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi Login(string Usuario, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/Login", ReplyAction="http://tempuri.org/ITimbrado/LoginResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> LoginAsync(string Usuario, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/PFX", ReplyAction="http://tempuri.org/ITimbrado/PFXResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi PFX(string Usuario, string PAssword, byte[] ArchivoCER, byte[] ArchivoKey, string ClavePrivada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/PFX", ReplyAction="http://tempuri.org/ITimbrado/PFXResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> PFXAsync(string Usuario, string PAssword, byte[] ArchivoCER, byte[] ArchivoKey, string ClavePrivada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/CancelarAsincrono", ReplyAction="http://tempuri.org/ITimbrado/CancelarAsincronoResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi CancelarAsincrono(string Usuario, string Password, byte[] PFX, string UUID, string ContraseñaPFX, double Total, string RFCEmior, string RFCReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/CancelarAsincrono", ReplyAction="http://tempuri.org/ITimbrado/CancelarAsincronoResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> CancelarAsincronoAsync(string Usuario, string Password, byte[] PFX, string UUID, string ContraseñaPFX, double Total, string RFCEmior, string RFCReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/VerStatus", ReplyAction="http://tempuri.org/ITimbrado/VerStatusResponse")]
        Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi VerStatus(string Usuario, string Password, string UUID, double Total, string RFCEmisor, string RFCReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimbrado/VerStatus", ReplyAction="http://tempuri.org/ITimbrado/VerStatusResponse")]
        System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> VerStatusAsync(string Usuario, string Password, string UUID, double Total, string RFCEmisor, string RFCReceptor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITimbradoChannel : Maxima_Distribuidores_VS.ServiceReferenceFC.ITimbrado, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimbradoClient : System.ServiceModel.ClientBase<Maxima_Distribuidores_VS.ServiceReferenceFC.ITimbrado>, Maxima_Distribuidores_VS.ServiceReferenceFC.ITimbrado {
        
        public TimbradoClient() {
        }
        
        public TimbradoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimbradoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimbradoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimbradoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi Timbrar(string Usuario, string Password, byte[] ArchivoXML) {
            return base.Channel.Timbrar(Usuario, Password, ArchivoXML);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> TimbrarAsync(string Usuario, string Password, byte[] ArchivoXML) {
            return base.Channel.TimbrarAsync(Usuario, Password, ArchivoXML);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi TimbrarTest(string Usuario, string Password, byte[] ArchivoXML) {
            return base.Channel.TimbrarTest(Usuario, Password, ArchivoXML);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> TimbrarTestAsync(string Usuario, string Password, byte[] ArchivoXML) {
            return base.Channel.TimbrarTestAsync(Usuario, Password, ArchivoXML);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi PDF(string Usuario, string Password, byte[] ArchivoXML, byte[] ArchivoACK) {
            return base.Channel.PDF(Usuario, Password, ArchivoXML, ArchivoACK);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> PDFAsync(string Usuario, string Password, byte[] ArchivoXML, byte[] ArchivoACK) {
            return base.Channel.PDFAsync(Usuario, Password, ArchivoXML, ArchivoACK);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi Cancelar(string Usuario, string Password, byte[] PFX, string[] UUID, string ContraseñaPFX) {
            return base.Channel.Cancelar(Usuario, Password, PFX, UUID, ContraseñaPFX);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> CancelarAsync(string Usuario, string Password, byte[] PFX, string[] UUID, string ContraseñaPFX) {
            return base.Channel.CancelarAsync(Usuario, Password, PFX, UUID, ContraseñaPFX);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi CambiarContrasena(string Usuario, string Password, string NuevoPassword) {
            return base.Channel.CambiarContrasena(Usuario, Password, NuevoPassword);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> CambiarContrasenaAsync(string Usuario, string Password, string NuevoPassword) {
            return base.Channel.CambiarContrasenaAsync(Usuario, Password, NuevoPassword);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi Login(string Usuario, string Password) {
            return base.Channel.Login(Usuario, Password);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> LoginAsync(string Usuario, string Password) {
            return base.Channel.LoginAsync(Usuario, Password);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi PFX(string Usuario, string PAssword, byte[] ArchivoCER, byte[] ArchivoKey, string ClavePrivada) {
            return base.Channel.PFX(Usuario, PAssword, ArchivoCER, ArchivoKey, ClavePrivada);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> PFXAsync(string Usuario, string PAssword, byte[] ArchivoCER, byte[] ArchivoKey, string ClavePrivada) {
            return base.Channel.PFXAsync(Usuario, PAssword, ArchivoCER, ArchivoKey, ClavePrivada);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi CancelarAsincrono(string Usuario, string Password, byte[] PFX, string UUID, string ContraseñaPFX, double Total, string RFCEmior, string RFCReceptor) {
            return base.Channel.CancelarAsincrono(Usuario, Password, PFX, UUID, ContraseñaPFX, Total, RFCEmior, RFCReceptor);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> CancelarAsincronoAsync(string Usuario, string Password, byte[] PFX, string UUID, string ContraseñaPFX, double Total, string RFCEmior, string RFCReceptor) {
            return base.Channel.CancelarAsincronoAsync(Usuario, Password, PFX, UUID, ContraseñaPFX, Total, RFCEmior, RFCReceptor);
        }
        
        public Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi VerStatus(string Usuario, string Password, string UUID, double Total, string RFCEmisor, string RFCReceptor) {
            return base.Channel.VerStatus(Usuario, Password, UUID, Total, RFCEmisor, RFCReceptor);
        }
        
        public System.Threading.Tasks.Task<Maxima_Distribuidores_VS.ServiceReferenceFC.RespuestaCFDi> VerStatusAsync(string Usuario, string Password, string UUID, double Total, string RFCEmisor, string RFCReceptor) {
            return base.Channel.VerStatusAsync(Usuario, Password, UUID, Total, RFCEmisor, RFCReceptor);
        }
    }
}
